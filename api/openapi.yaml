openapi: 3.0.3
info:
  title: rental server API
  description: レンタルサーバのAPI仕様書
  version: 0.1.1
servers:
  - url: http://api.example.com
    description: Optional server description, e.g. Main (production) server
paths:
  /users:
    get:
      tags:
       - user
      summary: Returns a list of users.
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/User'
  
  /user/create:
    post:
      tags:
      - user
      summary: Create ubuntu user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  format: int64
                  example: 1
                username:
                  type: string
                  example: sample_user
      responses:
        '200':
          description: Successful
        '400':
          description: Faild
          
  /user/delete:
    post:
      tags:
      - user
      summary: Delete ubuntu user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  format: int64
                  example: 1
      responses:
        '200':
          description: Successful
        '400':
          description: Faild
  
  /mails:
    get:
      tags:
      - mail
      summary: Get user mail list.
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A JSON array of user's mail list. 
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/Mail'
        '400':
          description: Faild
  
  /mail/create:
    post:
      tags:
      - mail
      summary: add user mail.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  format: int64
                  example: 1
                mail_localpart:
                  type: string
                  example: user01
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema: 
                  $ref: '#/components/schemas/Mail'
        '400':
          description: Faild
        '409':
          description: Conflict mail address.

  /mail/delete:
    post:
      tags:
      - mail
      summary: delete user mail.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  format: int64
                  example: 1
                mail_localpart:
                  type: string
                  example: user01
      responses:
        '200':
          description: Successful
        '400':
          description: Faild
                  
  /wordpress/install:
    post:
      tags:
      - wordpress
      summary: Install wordpress in user directory.
      parameters:
        - name: userId
          in: query
          description: userID to install wordpress
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
        '400':
          description: Faild
  
  /wordpress/status:
    get:
      tags:
      - wordpress
      summary: Get wordpress status.
      parameters:
        - name: userId
          in: query
          description: userID to get wordpress status.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A JSON array of user's mail list. 
          content:
            application/json:
              schema: 
                type: string
                example: undifind
        '400':
          description: Faild
                
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: user01
        mails:
          type: array
          items: 
            $ref: '#/components/schemas/Mail'
  
    Mail:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        mail_localpart:
          type: string
          example: user01
        mail_address:
          type: string
          example: user01@example.com
                